//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("JobRepoModel", "FK_City_Province", "Province", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JobRepo.Model.Province), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JobRepo.Model.City), true)]
[assembly: EdmRelationshipAttribute("JobRepoModel", "FK_Location_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JobRepo.Model.City), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JobRepo.Model.Location), true)]
[assembly: EdmRelationshipAttribute("JobRepoModel", "FK_Location_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JobRepo.Model.Country), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JobRepo.Model.Location), true)]
[assembly: EdmRelationshipAttribute("JobRepoModel", "FK_Province_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JobRepo.Model.Country), "Province", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JobRepo.Model.Province), true)]
[assembly: EdmRelationshipAttribute("JobRepoModel", "FK_Resume_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JobRepo.Model.Employee), "Resume", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JobRepo.Model.Resume), true)]
[assembly: EdmRelationshipAttribute("JobRepoModel", "FK_SelectedEmployee_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JobRepo.Model.Employee), "SelectedEmployee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JobRepo.Model.SelectedEmployee), true)]
[assembly: EdmRelationshipAttribute("JobRepoModel", "FK_Job_Employer", "Employer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JobRepo.Model.Employer), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JobRepo.Model.Job), true)]
[assembly: EdmRelationshipAttribute("JobRepoModel", "FK_SelectedEmployee_Employer", "Employer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JobRepo.Model.Employer), "SelectedEmployee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JobRepo.Model.SelectedEmployee), true)]
[assembly: EdmRelationshipAttribute("JobRepoModel", "FK_Job_JobType", "JobType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JobRepo.Model.JobType), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JobRepo.Model.Job), true)]
[assembly: EdmRelationshipAttribute("JobRepoModel", "FK_Job_Location", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JobRepo.Model.Location), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JobRepo.Model.Job), true)]
[assembly: EdmRelationshipAttribute("JobRepoModel", "FK_Location_Province", "Province", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JobRepo.Model.Province), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JobRepo.Model.Location), true)]

#endregion

namespace JobRepo.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class JobRepoDataContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new JobRepoDataContext object using the connection string found in the 'JobRepoDataContext' section of the application configuration file.
        /// </summary>
        public JobRepoDataContext() : base("name=JobRepoDataContext", "JobRepoDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JobRepoDataContext object.
        /// </summary>
        public JobRepoDataContext(string connectionString) : base(connectionString, "JobRepoDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JobRepoDataContext object.
        /// </summary>
        public JobRepoDataContext(EntityConnection connection) : base(connection, "JobRepoDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employer> Employers
        {
            get
            {
                if ((_Employers == null))
                {
                    _Employers = base.CreateObjectSet<Employer>("Employers");
                }
                return _Employers;
            }
        }
        private ObjectSet<Employer> _Employers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Job> Jobs
        {
            get
            {
                if ((_Jobs == null))
                {
                    _Jobs = base.CreateObjectSet<Job>("Jobs");
                }
                return _Jobs;
            }
        }
        private ObjectSet<Job> _Jobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobType> JobTypes
        {
            get
            {
                if ((_JobTypes == null))
                {
                    _JobTypes = base.CreateObjectSet<JobType>("JobTypes");
                }
                return _JobTypes;
            }
        }
        private ObjectSet<JobType> _JobTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<KeywordPopularity> KeywordPopularities
        {
            get
            {
                if ((_KeywordPopularities == null))
                {
                    _KeywordPopularities = base.CreateObjectSet<KeywordPopularity>("KeywordPopularities");
                }
                return _KeywordPopularities;
            }
        }
        private ObjectSet<KeywordPopularity> _KeywordPopularities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Province> Provinces
        {
            get
            {
                if ((_Provinces == null))
                {
                    _Provinces = base.CreateObjectSet<Province>("Provinces");
                }
                return _Provinces;
            }
        }
        private ObjectSet<Province> _Provinces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Resume> Resumes
        {
            get
            {
                if ((_Resumes == null))
                {
                    _Resumes = base.CreateObjectSet<Resume>("Resumes");
                }
                return _Resumes;
            }
        }
        private ObjectSet<Resume> _Resumes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SelectedEmployee> SelectedEmployees
        {
            get
            {
                if ((_SelectedEmployees == null))
                {
                    _SelectedEmployees = base.CreateObjectSet<SelectedEmployee>("SelectedEmployees");
                }
                return _SelectedEmployees;
            }
        }
        private ObjectSet<SelectedEmployee> _SelectedEmployees;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployers(Employer employer)
        {
            base.AddObject("Employers", employer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Jobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobs(Job job)
        {
            base.AddObject("Jobs", job);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobTypes(JobType jobType)
        {
            base.AddObject("JobTypes", jobType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the KeywordPopularities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKeywordPopularities(KeywordPopularity keywordPopularity)
        {
            base.AddObject("KeywordPopularities", keywordPopularity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Provinces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProvinces(Province province)
        {
            base.AddObject("Provinces", province);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Resumes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResumes(Resume resume)
        {
            base.AddObject("Resumes", resume);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SelectedEmployees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSelectedEmployees(SelectedEmployee selectedEmployee)
        {
            base.AddObject("SelectedEmployees", selectedEmployee);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="keyowrds">No Metadata Documentation available.</param>
        public int SetKeywordsPopularity(global::System.String keyowrds)
        {
            ObjectParameter keyowrdsParameter;
            if (keyowrds != null)
            {
                keyowrdsParameter = new ObjectParameter("Keyowrds", keyowrds);
            }
            else
            {
                keyowrdsParameter = new ObjectParameter("Keyowrds", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SetKeywordsPopularity", keyowrdsParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobRepoModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="cityID">Initial value of the CityID property.</param>
        /// <param name="provinceID">Initial value of the ProvinceID property.</param>
        /// <param name="cityName">Initial value of the CityName property.</param>
        public static City CreateCity(global::System.Int32 cityID, global::System.Int32 provinceID, global::System.String cityName)
        {
            City city = new City();
            city.CityID = cityID;
            city.ProvinceID = provinceID;
            city.CityName = cityName;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProvinceID
        {
            get
            {
                return _ProvinceID;
            }
            set
            {
                OnProvinceIDChanging(value);
                ReportPropertyChanging("ProvinceID");
                _ProvinceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProvinceID");
                OnProvinceIDChanged();
            }
        }
        private global::System.Int32 _ProvinceID;
        partial void OnProvinceIDChanging(global::System.Int32 value);
        partial void OnProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_City_Province", "Province")]
        public Province Province
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("JobRepoModel.FK_City_Province", "Province").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("JobRepoModel.FK_City_Province", "Province").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Province> ProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("JobRepoModel.FK_City_Province", "Province");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Province>("JobRepoModel.FK_City_Province", "Province", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Location_City", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("JobRepoModel.FK_Location_City", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("JobRepoModel.FK_Location_City", "Location", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobRepoModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        public static Country CreateCountry(global::System.Int32 countryID, global::System.String countryName)
        {
            Country country = new Country();
            country.CountryID = countryID;
            country.CountryName = countryName;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Location_Country", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("JobRepoModel.FK_Location_Country", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("JobRepoModel.FK_Location_Country", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Province_Country", "Province")]
        public EntityCollection<Province> Provinces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Province>("JobRepoModel.FK_Province_Country", "Province");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Province>("JobRepoModel.FK_Province_Country", "Province", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobRepoModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="jobTitle">Initial value of the JobTitle property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeID, global::System.String firstName, global::System.String lastName, global::System.String phone, global::System.String email, global::System.String jobTitle)
        {
            Employee employee = new Employee();
            employee.EmployeeID = employeeID;
            employee.FirstName = firstName;
            employee.LastName = lastName;
            employee.Phone = phone;
            employee.Email = email;
            employee.JobTitle = jobTitle;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                if (_EmployeeID != value)
                {
                    OnEmployeeIDChanging(value);
                    ReportPropertyChanging("EmployeeID");
                    _EmployeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeID");
                    OnEmployeeIDChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Resume_Employee", "Resume")]
        public EntityCollection<Resume> Resumes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resume>("JobRepoModel.FK_Resume_Employee", "Resume");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resume>("JobRepoModel.FK_Resume_Employee", "Resume", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_SelectedEmployee_Employee", "SelectedEmployee")]
        public EntityCollection<SelectedEmployee> SelectedEmployees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SelectedEmployee>("JobRepoModel.FK_SelectedEmployee_Employee", "SelectedEmployee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SelectedEmployee>("JobRepoModel.FK_SelectedEmployee_Employee", "SelectedEmployee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobRepoModel", Name="Employer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employer object.
        /// </summary>
        /// <param name="employerID">Initial value of the EmployerID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="contactName">Initial value of the ContactName property.</param>
        /// <param name="contactEmail">Initial value of the ContactEmail property.</param>
        /// <param name="contactPhone">Initial value of the ContactPhone property.</param>
        public static Employer CreateEmployer(global::System.Int32 employerID, global::System.String title, global::System.String address, global::System.String phone, global::System.String email, global::System.String contactName, global::System.String contactEmail, global::System.String contactPhone)
        {
            Employer employer = new Employer();
            employer.EmployerID = employerID;
            employer.Title = title;
            employer.Address = address;
            employer.Phone = phone;
            employer.Email = email;
            employer.ContactName = contactName;
            employer.ContactEmail = contactEmail;
            employer.ContactPhone = contactPhone;
            return employer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployerID
        {
            get
            {
                return _EmployerID;
            }
            set
            {
                if (_EmployerID != value)
                {
                    OnEmployerIDChanging(value);
                    ReportPropertyChanging("EmployerID");
                    _EmployerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployerID");
                    OnEmployerIDChanged();
                }
            }
        }
        private global::System.Int32 _EmployerID;
        partial void OnEmployerIDChanging(global::System.Int32 value);
        partial void OnEmployerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WebSite
        {
            get
            {
                return _WebSite;
            }
            set
            {
                OnWebSiteChanging(value);
                ReportPropertyChanging("WebSite");
                _WebSite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WebSite");
                OnWebSiteChanged();
            }
        }
        private global::System.String _WebSite;
        partial void OnWebSiteChanging(global::System.String value);
        partial void OnWebSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactPhone
        {
            get
            {
                return _ContactPhone;
            }
            set
            {
                OnContactPhoneChanging(value);
                ReportPropertyChanging("ContactPhone");
                _ContactPhone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactPhone");
                OnContactPhoneChanged();
            }
        }
        private global::System.String _ContactPhone;
        partial void OnContactPhoneChanging(global::System.String value);
        partial void OnContactPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactMobile
        {
            get
            {
                return _ContactMobile;
            }
            set
            {
                OnContactMobileChanging(value);
                ReportPropertyChanging("ContactMobile");
                _ContactMobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactMobile");
                OnContactMobileChanged();
            }
        }
        private global::System.String _ContactMobile;
        partial void OnContactMobileChanging(global::System.String value);
        partial void OnContactMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Logo
        {
            get
            {
                return StructuralObject.GetValidValue(_Logo);
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.Byte[] _Logo;
        partial void OnLogoChanging(global::System.Byte[] value);
        partial void OnLogoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Job_Employer", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("JobRepoModel.FK_Job_Employer", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("JobRepoModel.FK_Job_Employer", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_SelectedEmployee_Employer", "SelectedEmployee")]
        public EntityCollection<SelectedEmployee> SelectedEmployees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SelectedEmployee>("JobRepoModel.FK_SelectedEmployee_Employer", "SelectedEmployee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SelectedEmployee>("JobRepoModel.FK_SelectedEmployee_Employer", "SelectedEmployee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobRepoModel", Name="Job")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Job : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job object.
        /// </summary>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="employerID">Initial value of the EmployerID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="postedDate">Initial value of the PostedDate property.</param>
        /// <param name="validFrom">Initial value of the ValidFrom property.</param>
        /// <param name="validTo">Initial value of the ValidTo property.</param>
        /// <param name="jobTypeID">Initial value of the JobTypeID property.</param>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="jobAdvTypeID">Initial value of the JobAdvTypeID property.</param>
        /// <param name="viewed">Initial value of the Viewed property.</param>
        public static Job CreateJob(global::System.Int32 jobID, global::System.Int32 employerID, global::System.String title, global::System.String description, global::System.DateTime postedDate, global::System.DateTime validFrom, global::System.DateTime validTo, global::System.Int32 jobTypeID, global::System.Int32 locationID, global::System.String status, global::System.Int32 jobAdvTypeID, global::System.Int32 viewed)
        {
            Job job = new Job();
            job.JobID = jobID;
            job.EmployerID = employerID;
            job.Title = title;
            job.Description = description;
            job.PostedDate = postedDate;
            job.ValidFrom = validFrom;
            job.ValidTo = validTo;
            job.JobTypeID = jobTypeID;
            job.LocationID = locationID;
            job.Status = status;
            job.JobAdvTypeID = jobAdvTypeID;
            job.Viewed = viewed;
            return job;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                if (_JobID != value)
                {
                    OnJobIDChanging(value);
                    ReportPropertyChanging("JobID");
                    _JobID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobID");
                    OnJobIDChanged();
                }
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployerID
        {
            get
            {
                return _EmployerID;
            }
            set
            {
                OnEmployerIDChanging(value);
                ReportPropertyChanging("EmployerID");
                _EmployerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployerID");
                OnEmployerIDChanged();
            }
        }
        private global::System.Int32 _EmployerID;
        partial void OnEmployerIDChanging(global::System.Int32 value);
        partial void OnEmployerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostedDate
        {
            get
            {
                return _PostedDate;
            }
            set
            {
                OnPostedDateChanging(value);
                ReportPropertyChanging("PostedDate");
                _PostedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedDate");
                OnPostedDateChanged();
            }
        }
        private global::System.DateTime _PostedDate;
        partial void OnPostedDateChanging(global::System.DateTime value);
        partial void OnPostedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidFrom
        {
            get
            {
                return _ValidFrom;
            }
            set
            {
                OnValidFromChanging(value);
                ReportPropertyChanging("ValidFrom");
                _ValidFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidFrom");
                OnValidFromChanged();
            }
        }
        private global::System.DateTime _ValidFrom;
        partial void OnValidFromChanging(global::System.DateTime value);
        partial void OnValidFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidTo
        {
            get
            {
                return _ValidTo;
            }
            set
            {
                OnValidToChanging(value);
                ReportPropertyChanging("ValidTo");
                _ValidTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidTo");
                OnValidToChanged();
            }
        }
        private global::System.DateTime _ValidTo;
        partial void OnValidToChanging(global::System.DateTime value);
        partial void OnValidToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SalaryFrom
        {
            get
            {
                return _SalaryFrom;
            }
            set
            {
                OnSalaryFromChanging(value);
                ReportPropertyChanging("SalaryFrom");
                _SalaryFrom = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SalaryFrom");
                OnSalaryFromChanged();
            }
        }
        private global::System.String _SalaryFrom;
        partial void OnSalaryFromChanging(global::System.String value);
        partial void OnSalaryFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SalaryTo
        {
            get
            {
                return _SalaryTo;
            }
            set
            {
                OnSalaryToChanging(value);
                ReportPropertyChanging("SalaryTo");
                _SalaryTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SalaryTo");
                OnSalaryToChanged();
            }
        }
        private global::System.String _SalaryTo;
        partial void OnSalaryToChanging(global::System.String value);
        partial void OnSalaryToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobTypeID
        {
            get
            {
                return _JobTypeID;
            }
            set
            {
                OnJobTypeIDChanging(value);
                ReportPropertyChanging("JobTypeID");
                _JobTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobTypeID");
                OnJobTypeIDChanged();
            }
        }
        private global::System.Int32 _JobTypeID;
        partial void OnJobTypeIDChanging(global::System.Int32 value);
        partial void OnJobTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                OnLocationIDChanging(value);
                ReportPropertyChanging("LocationID");
                _LocationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationID");
                OnLocationIDChanged();
            }
        }
        private global::System.Int32 _LocationID;
        partial void OnLocationIDChanging(global::System.Int32 value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobAdvTypeID
        {
            get
            {
                return _JobAdvTypeID;
            }
            set
            {
                OnJobAdvTypeIDChanging(value);
                ReportPropertyChanging("JobAdvTypeID");
                _JobAdvTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobAdvTypeID");
                OnJobAdvTypeIDChanged();
            }
        }
        private global::System.Int32 _JobAdvTypeID;
        partial void OnJobAdvTypeIDChanging(global::System.Int32 value);
        partial void OnJobAdvTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Viewed
        {
            get
            {
                return _Viewed;
            }
            set
            {
                OnViewedChanging(value);
                ReportPropertyChanging("Viewed");
                _Viewed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Viewed");
                OnViewedChanged();
            }
        }
        private global::System.Int32 _Viewed;
        partial void OnViewedChanging(global::System.Int32 value);
        partial void OnViewedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Job_Employer", "Employer")]
        public Employer Employer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employer>("JobRepoModel.FK_Job_Employer", "Employer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employer>("JobRepoModel.FK_Job_Employer", "Employer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employer> EmployerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employer>("JobRepoModel.FK_Job_Employer", "Employer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employer>("JobRepoModel.FK_Job_Employer", "Employer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Job_JobType", "JobType")]
        public JobType JobType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("JobRepoModel.FK_Job_JobType", "JobType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("JobRepoModel.FK_Job_JobType", "JobType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobType> JobTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("JobRepoModel.FK_Job_JobType", "JobType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobType>("JobRepoModel.FK_Job_JobType", "JobType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Job_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("JobRepoModel.FK_Job_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("JobRepoModel.FK_Job_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("JobRepoModel.FK_Job_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("JobRepoModel.FK_Job_Location", "Location", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobRepoModel", Name="JobType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobType object.
        /// </summary>
        /// <param name="jobTypeID">Initial value of the JobTypeID property.</param>
        public static JobType CreateJobType(global::System.Int32 jobTypeID)
        {
            JobType jobType = new JobType();
            jobType.JobTypeID = jobTypeID;
            return jobType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobTypeID
        {
            get
            {
                return _JobTypeID;
            }
            set
            {
                if (_JobTypeID != value)
                {
                    OnJobTypeIDChanging(value);
                    ReportPropertyChanging("JobTypeID");
                    _JobTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobTypeID");
                    OnJobTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _JobTypeID;
        partial void OnJobTypeIDChanging(global::System.Int32 value);
        partial void OnJobTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Job_JobType", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("JobRepoModel.FK_Job_JobType", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("JobRepoModel.FK_Job_JobType", "Job", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobRepoModel", Name="KeywordPopularity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KeywordPopularity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new KeywordPopularity object.
        /// </summary>
        /// <param name="keywordPopularityID">Initial value of the KeywordPopularityID property.</param>
        /// <param name="keyword">Initial value of the Keyword property.</param>
        /// <param name="count">Initial value of the Count property.</param>
        public static KeywordPopularity CreateKeywordPopularity(global::System.Int32 keywordPopularityID, global::System.String keyword, global::System.Int32 count)
        {
            KeywordPopularity keywordPopularity = new KeywordPopularity();
            keywordPopularity.KeywordPopularityID = keywordPopularityID;
            keywordPopularity.Keyword = keyword;
            keywordPopularity.Count = count;
            return keywordPopularity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeywordPopularityID
        {
            get
            {
                return _KeywordPopularityID;
            }
            set
            {
                if (_KeywordPopularityID != value)
                {
                    OnKeywordPopularityIDChanging(value);
                    ReportPropertyChanging("KeywordPopularityID");
                    _KeywordPopularityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeywordPopularityID");
                    OnKeywordPopularityIDChanged();
                }
            }
        }
        private global::System.Int32 _KeywordPopularityID;
        partial void OnKeywordPopularityIDChanging(global::System.Int32 value);
        partial void OnKeywordPopularityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Keyword
        {
            get
            {
                return _Keyword;
            }
            set
            {
                OnKeywordChanging(value);
                ReportPropertyChanging("Keyword");
                _Keyword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Keyword");
                OnKeywordChanged();
            }
        }
        private global::System.String _Keyword;
        partial void OnKeywordChanging(global::System.String value);
        partial void OnKeywordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobRepoModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="provinceID">Initial value of the ProvinceID property.</param>
        /// <param name="cityID">Initial value of the CityID property.</param>
        /// <param name="postCode">Initial value of the PostCode property.</param>
        public static Location CreateLocation(global::System.Int32 locationID, global::System.Int32 countryID, global::System.Int32 provinceID, global::System.Int32 cityID, global::System.String postCode)
        {
            Location location = new Location();
            location.LocationID = locationID;
            location.CountryID = countryID;
            location.ProvinceID = provinceID;
            location.CityID = cityID;
            location.PostCode = postCode;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                if (_LocationID != value)
                {
                    OnLocationIDChanging(value);
                    ReportPropertyChanging("LocationID");
                    _LocationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationID");
                    OnLocationIDChanged();
                }
            }
        }
        private global::System.Int32 _LocationID;
        partial void OnLocationIDChanging(global::System.Int32 value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProvinceID
        {
            get
            {
                return _ProvinceID;
            }
            set
            {
                OnProvinceIDChanging(value);
                ReportPropertyChanging("ProvinceID");
                _ProvinceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProvinceID");
                OnProvinceIDChanged();
            }
        }
        private global::System.Int32 _ProvinceID;
        partial void OnProvinceIDChanging(global::System.Int32 value);
        partial void OnProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostCode
        {
            get
            {
                return _PostCode;
            }
            set
            {
                OnPostCodeChanging(value);
                ReportPropertyChanging("PostCode");
                _PostCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostCode");
                OnPostCodeChanged();
            }
        }
        private global::System.String _PostCode;
        partial void OnPostCodeChanging(global::System.String value);
        partial void OnPostCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Location_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("JobRepoModel.FK_Location_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("JobRepoModel.FK_Location_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("JobRepoModel.FK_Location_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("JobRepoModel.FK_Location_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Location_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("JobRepoModel.FK_Location_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("JobRepoModel.FK_Location_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("JobRepoModel.FK_Location_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("JobRepoModel.FK_Location_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Job_Location", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("JobRepoModel.FK_Job_Location", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("JobRepoModel.FK_Job_Location", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Location_Province", "Province")]
        public Province Province
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("JobRepoModel.FK_Location_Province", "Province").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("JobRepoModel.FK_Location_Province", "Province").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Province> ProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Province>("JobRepoModel.FK_Location_Province", "Province");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Province>("JobRepoModel.FK_Location_Province", "Province", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobRepoModel", Name="Province")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Province : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Province object.
        /// </summary>
        /// <param name="provinceID">Initial value of the ProvinceID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="provinceName">Initial value of the ProvinceName property.</param>
        public static Province CreateProvince(global::System.Int32 provinceID, global::System.Int32 countryID, global::System.String provinceName)
        {
            Province province = new Province();
            province.ProvinceID = provinceID;
            province.CountryID = countryID;
            province.ProvinceName = provinceName;
            return province;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProvinceID
        {
            get
            {
                return _ProvinceID;
            }
            set
            {
                if (_ProvinceID != value)
                {
                    OnProvinceIDChanging(value);
                    ReportPropertyChanging("ProvinceID");
                    _ProvinceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProvinceID");
                    OnProvinceIDChanged();
                }
            }
        }
        private global::System.Int32 _ProvinceID;
        partial void OnProvinceIDChanging(global::System.Int32 value);
        partial void OnProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProvinceName
        {
            get
            {
                return _ProvinceName;
            }
            set
            {
                OnProvinceNameChanging(value);
                ReportPropertyChanging("ProvinceName");
                _ProvinceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProvinceName");
                OnProvinceNameChanged();
            }
        }
        private global::System.String _ProvinceName;
        partial void OnProvinceNameChanging(global::System.String value);
        partial void OnProvinceNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_City_Province", "City")]
        public EntityCollection<City> Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("JobRepoModel.FK_City_Province", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("JobRepoModel.FK_City_Province", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Province_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("JobRepoModel.FK_Province_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("JobRepoModel.FK_Province_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("JobRepoModel.FK_Province_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("JobRepoModel.FK_Province_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Location_Province", "Location")]
        public EntityCollection<Location> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Location>("JobRepoModel.FK_Location_Province", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Location>("JobRepoModel.FK_Location_Province", "Location", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobRepoModel", Name="Resume")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Resume : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Resume object.
        /// </summary>
        /// <param name="resumeID">Initial value of the ResumeID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="keywords">Initial value of the Keywords property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="postedDate">Initial value of the PostedDate property.</param>
        public static Resume CreateResume(global::System.Int32 resumeID, global::System.Int32 employeeID, global::System.String keywords, global::System.String title, global::System.Byte[] description, global::System.DateTime postedDate)
        {
            Resume resume = new Resume();
            resume.ResumeID = resumeID;
            resume.EmployeeID = employeeID;
            resume.Keywords = keywords;
            resume.Title = title;
            resume.Description = description;
            resume.PostedDate = postedDate;
            return resume;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResumeID
        {
            get
            {
                return _ResumeID;
            }
            set
            {
                if (_ResumeID != value)
                {
                    OnResumeIDChanging(value);
                    ReportPropertyChanging("ResumeID");
                    _ResumeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResumeID");
                    OnResumeIDChanged();
                }
            }
        }
        private global::System.Int32 _ResumeID;
        partial void OnResumeIDChanging(global::System.Int32 value);
        partial void OnResumeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Keywords
        {
            get
            {
                return _Keywords;
            }
            set
            {
                OnKeywordsChanging(value);
                ReportPropertyChanging("Keywords");
                _Keywords = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Keywords");
                OnKeywordsChanged();
            }
        }
        private global::System.String _Keywords;
        partial void OnKeywordsChanging(global::System.String value);
        partial void OnKeywordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Description
        {
            get
            {
                return StructuralObject.GetValidValue(_Description);
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.Byte[] _Description;
        partial void OnDescriptionChanging(global::System.Byte[] value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostedDate
        {
            get
            {
                return _PostedDate;
            }
            set
            {
                OnPostedDateChanging(value);
                ReportPropertyChanging("PostedDate");
                _PostedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostedDate");
                OnPostedDateChanged();
            }
        }
        private global::System.DateTime _PostedDate;
        partial void OnPostedDateChanging(global::System.DateTime value);
        partial void OnPostedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_Resume_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("JobRepoModel.FK_Resume_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("JobRepoModel.FK_Resume_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("JobRepoModel.FK_Resume_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("JobRepoModel.FK_Resume_Employee", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JobRepoModel", Name="SelectedEmployee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SelectedEmployee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SelectedEmployee object.
        /// </summary>
        /// <param name="selectedEmployeeID">Initial value of the SelectedEmployeeID property.</param>
        /// <param name="employerID">Initial value of the EmployerID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        public static SelectedEmployee CreateSelectedEmployee(global::System.Int32 selectedEmployeeID, global::System.Int32 employerID, global::System.Int32 employeeID)
        {
            SelectedEmployee selectedEmployee = new SelectedEmployee();
            selectedEmployee.SelectedEmployeeID = selectedEmployeeID;
            selectedEmployee.EmployerID = employerID;
            selectedEmployee.EmployeeID = employeeID;
            return selectedEmployee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SelectedEmployeeID
        {
            get
            {
                return _SelectedEmployeeID;
            }
            set
            {
                if (_SelectedEmployeeID != value)
                {
                    OnSelectedEmployeeIDChanging(value);
                    ReportPropertyChanging("SelectedEmployeeID");
                    _SelectedEmployeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SelectedEmployeeID");
                    OnSelectedEmployeeIDChanged();
                }
            }
        }
        private global::System.Int32 _SelectedEmployeeID;
        partial void OnSelectedEmployeeIDChanging(global::System.Int32 value);
        partial void OnSelectedEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployerID
        {
            get
            {
                return _EmployerID;
            }
            set
            {
                OnEmployerIDChanging(value);
                ReportPropertyChanging("EmployerID");
                _EmployerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployerID");
                OnEmployerIDChanged();
            }
        }
        private global::System.Int32 _EmployerID;
        partial void OnEmployerIDChanging(global::System.Int32 value);
        partial void OnEmployerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_SelectedEmployee_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("JobRepoModel.FK_SelectedEmployee_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("JobRepoModel.FK_SelectedEmployee_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("JobRepoModel.FK_SelectedEmployee_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("JobRepoModel.FK_SelectedEmployee_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JobRepoModel", "FK_SelectedEmployee_Employer", "Employer")]
        public Employer Employer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employer>("JobRepoModel.FK_SelectedEmployee_Employer", "Employer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employer>("JobRepoModel.FK_SelectedEmployee_Employer", "Employer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employer> EmployerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employer>("JobRepoModel.FK_SelectedEmployee_Employer", "Employer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employer>("JobRepoModel.FK_SelectedEmployee_Employer", "Employer", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
